// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  out vec4 v_worldPos;//世界坐标

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    v_worldPos=cc_matWorld*pos;
    pos = cc_matViewProj * v_worldPos;
    #else
    v_worldPos=pos;
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform attr{
    vec4 u_maskColor;//遮罩颜色
    float u_progressY;//进度条世界y坐标
  };

  in vec4 v_worldPos;

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    float smoothWidth=5.0;//过渡范围
    #if USE_TEXTURE
      CCTexture(texture, v_uv0, o);
    #endif
    // ALPHA_TEST(o);
    float smoothA=1.0-smoothstep(u_progressY,u_progressY+smoothWidth,v_worldPos.y);

    if(v_worldPos.y<=u_progressY){
      o.a*=smoothA;
    }else{
      o.rgb=mix(u_maskColor.rgb,o.rgb,smoothA);
    }
    
    //开启预乘的骨骼需要乘一次a
    #if PREMULTI_ALPHA
      o.rgb*=o.a;
    #endif
    
    gl_FragColor =o;
  }
}%
